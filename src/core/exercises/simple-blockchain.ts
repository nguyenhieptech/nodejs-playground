import crypto from "node:crypto";

// Create a simple blockchain using NodeJS and TypeScript. Explain all the necessary concepts for me please.
// Generated by Claude Sonnet 3.5
// Extra resource: https://www.youtube.com/watch?v=mslUjcbzhwA

class Block {
  /** nonce is short for *"number only used once"* */
  public nonce: number = 0;
  public hash: string;

  constructor(
    public timestamp: number,
    public data: any,
    public previousHash: string = ""
  ) {
    this.hash = this.calculateHash();
  }

  calculateHash(): string {
    const data = this.previousHash + this.timestamp + JSON.stringify(this.data) + this.nonce;
    return crypto.createHash("sha256").update(data).digest("hex");
  }

  mine(difficulty: number) {
    while (!this.hash.startsWith("0".repeat(difficulty))) {
      this.nonce++;
      this.hash = this.calculateHash();
    }
    console.log(`Block mined: ${this.hash}`);
  }
}

class Blockchain {
  private chain: Block[];
  private difficulty: number;

  constructor() {
    this.chain = [this.createGenesisBlock()];
    this.difficulty = 2;
  }

  private createGenesisBlock(): Block {
    return new Block(Date.now(), "Genesis Block", "0");
  }

  getLatestBlock(): Block | undefined {
    return this.chain.length > 0 ? this.chain[this.chain.length - 1] : undefined;
  }

  addBlock(data: any) {
    const latestBlock = this.getLatestBlock();
    if (latestBlock === undefined) {
      throw new Error("Cannot add block to empty blockchain");
    }
    const block = new Block(Date.now(), data, latestBlock.hash);
    block.mine(this.difficulty);
    this.chain.push(block);
  }

  isValid(): boolean {
    for (let i = 1; i < this.chain.length; i++) {
      const currentBlock = this.chain[i];
      const previousBlock = this.chain[i - 1];

      if (currentBlock === undefined || previousBlock === undefined) {
        return false;
      }

      if (currentBlock.hash !== currentBlock.calculateHash()) {
        return false;
      }

      if (currentBlock.previousHash !== previousBlock.hash) {
        return false;
      }
    }
    return true;
  }
}

// Usage
const myBlockchain = new Blockchain();
myBlockchain.addBlock({ amount: 10 });
myBlockchain.addBlock({ amount: 20 });

console.log(JSON.stringify(myBlockchain, null, 2));
console.log(`Blockchain valid? ${myBlockchain.isValid()}`);
